# Autogenerated with SMOP 
from smop.core import *
# OSVR/ICC.m

    
@function
def ICC(cse=None,typ=None,dat=None,*args,**kwargs):
    varargin = ICC.varargin
    nargin = ICC.nargin

    #function to work out ICCs according to shrout & fleiss' schema (Shrout PE,
#Fleiss JL. Intraclass correlations: uses in assessing rater reliability.
#Psychol Bull. 1979;86:420-428).
    
    # 'dat' is data whose rows represent different ratings or raters & whose
# columns represent different cases or targets being measured. Each target
# is assumed to be a random sample from a population of targets.
    
    # 'cse' is either 1,2,3. 'cse' is: 1 if each target is measured by a
# different set of raters from a population of raters, 2 if each target is
# measured by the same raters, but that these raters are sampled from a
# population of raters, 3 if each target is measured by the same raters and
# these raters are the only raters of interest.
    
    # 'typ' is either 'single' or 'k' & denotes whether the ICC is based on a
# single measurement or on an average of k measurements, where k = the
# number of ratings/raters.
    
    # This has been tested using the example data in the paper by shrout & fleiss.
# 
# Example: out = ICC(3,'k',S_Fdata)
# returns ICC(3,k) of data 'S_Fdata' to double 'out'.
    
    # Kevin Brownhill, Imaging Sciences, KCL, London kevin.brownhill@kcl.ac.uk
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
    #number of raters/ratings
    k=size(dat,2)
# OSVR/ICC.m:29
    #number of targets
    n=size(dat,1)
# OSVR/ICC.m:31
    #mean per target
    mpt=mean(dat,2)
# OSVR/ICC.m:33
    #mean per rater/rating
    mpr=mean(dat)
# OSVR/ICC.m:35
    #get total mean
    tm=mean(mpt)
# OSVR/ICC.m:37
    #within target sum sqrs
    WSS=sum(sum(bsxfun(minus,dat,mpt) ** 2))
# OSVR/ICC.m:39
    #within target mean sqrs
    WMS=WSS / (dot(n,(k - 1)))
# OSVR/ICC.m:41
    #between rater sum sqrs
    RSS=dot(sum((mpr - tm) ** 2),n)
# OSVR/ICC.m:43
    #between rater mean sqrs
    RMS=RSS / (k - 1)
# OSVR/ICC.m:45
    # #get total sum sqrs
# TSS = sum(sum((dat - tm).^2));
#between target sum sqrs
    BSS=dot(sum((mpt - tm) ** 2),k)
# OSVR/ICC.m:49
    #between targets mean squares
    BMS=BSS / (n - 1)
# OSVR/ICC.m:51
    #residual sum of squares
    ESS=WSS - RSS
# OSVR/ICC.m:53
    #residual mean sqrs
    EMS=ESS / (dot((k - 1),(n - 1)))
# OSVR/ICC.m:55
    if 1 == cse:
        if 'single' == typ:
            out=(BMS - WMS) / (BMS + dot((k - 1),WMS))
# OSVR/ICC.m:60
        else:
            if 'k' == typ:
                out=(BMS - WMS) / BMS
# OSVR/ICC.m:62
            else:
                error('Wrong value for input typ')
    else:
        if 2 == cse:
            if 'single' == typ:
                out=(BMS - EMS) / (BMS + dot((k - 1),EMS) + dot(k,(RMS - EMS)) / n)
# OSVR/ICC.m:69
            else:
                if 'k' == typ:
                    out=(BMS - EMS) / (BMS + (RMS - EMS) / n)
# OSVR/ICC.m:71
                else:
                    error('Wrong value for input typ')
        else:
            if 3 == cse:
                if 'single' == typ:
                    out=(BMS - EMS) / (BMS + dot((k - 1),EMS))
# OSVR/ICC.m:78
                else:
                    if 'k' == typ:
                        out=(BMS - EMS) / BMS
# OSVR/ICC.m:80
                    else:
                        error('Wrong value for input typ')
            else:
                error('Wrong value for input cse')
    